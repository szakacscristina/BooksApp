{"version":3,"sources":["./src/app/books/books-edit/books-edit.component.html","./src/app/books/books-list/books-list.component.html","./src/app/books/books.component.html","./src/app/books/books-edit/books-edit.component.css","./src/app/books/books-edit/books-edit.component.ts","./src/app/books/books-list/books-list.component.css","./src/app/books/books-list/books-list.component.ts","./src/app/books/books-routing.module.ts","./src/app/books/books.component.css","./src/app/books/books.component.ts","./src/app/books/books.models.ts","./src/app/books/books.module.ts","./src/app/books/books.service.ts"],"names":[],"mappings":"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","file":"books-books-module.js","sourcesContent":["export default \"<p>Add/Edit books</p>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n    <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n        <div class=\\\"example-container\\\">\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('title').touched && formGroup.get('title').errors && formGroup.get('title').errors.required\\\">\\r\\n                    Title required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"YearOfRelease\\\" formControlName=\\\"yearOfRelease\\\" type=\\\"number\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('yearOfRelease').touched && formGroup.get('yearOfRelease').errors && formGroup.get('yearOfRelease').errors.required\\\">\\r\\n                    Year of release required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Publisher\\\" formControlName=\\\"publisher\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('publisher').touched && formGroup.get('publisher').errors && formGroup.get('publisher').errors.required\\\">\\r\\n                    Publisher required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('author').touched && formGroup.get('author').errors && formGroup.get('author').errors.required\\\">\\r\\n                    Publisher required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"BookGenre\\\" formControlName=\\\"bookGenre\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('bookGenre').touched && formGroup.get('bookGenre').errors && formGroup.get('bookGenre').errors.required\\\">\\r\\n                    Publisher required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"example-button-row\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-card>\\r\\n\"","export default \"<h1>Books</h1>\\r\\n\\r\\n<p>Many books in the list</p>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n    <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' color=\\\"primary\\\">Add</button>\\r\\n</div>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"books\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"books\\\">\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Title </th>\\r\\n        <td mat-cell *matCellDef=\\\"let book\\\"> {{book.title}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"yearOfRelease\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:23%\\\"> Year of release </th>\\r\\n        <td mat-cell *matCellDef=\\\"let book\\\"> {{book.yearOfRelease}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"publisher\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:23%\\\"> Publisher </th>\\r\\n        <td mat-cell *matCellDef=\\\"let book\\\"> {{book.publisher}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"author\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:23%\\\"> Author </th>\\r\\n        <td mat-cell *matCellDef=\\\"let book\\\"> {{book.author}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"bookGenre\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:23%\\\"> Book genre </th>\\r\\n        <td mat-cell *matCellDef=\\\"let book\\\"> {{book.bookGenre}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"numberOfReviews\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:23%\\\"> No. of reviews </th>\\r\\n        <td mat-cell *matCellDef=\\\"let book\\\"> {{book.numberOfReviews}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- Action Column -->\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:10%\\\"> Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let book\\\">\\r\\n            <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', book.id]\\\">edit</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"deleteBook(book)\\\">delete</mat-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!books\\\"></mat-progress-bar>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<router-outlet></router-outlet>\\n\"","export default \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 5px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n    .example-container > * {\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    body {\\r\\n    background-image: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9va3MvYm9va3MtZWRpdC9ib29rcy1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixtQkFBbUI7QUFDdkI7O0lBRUk7UUFDSSxXQUFXO0lBQ2Y7O0lBR0o7SUFDSSxzQkFBc0I7QUFDMUIiLCJmaWxlIjoic3JjL2FwcC9ib29rcy9ib29rcy1lZGl0L2Jvb2tzLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbiAgICAuZXhhbXBsZS1jb250YWluZXIgPiAqIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuXHJcblxyXG5ib2R5IHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BooksService } from '../books.service';\r\nimport { Book, BookGenre} from '../books.models';\r\n\r\n@Component({\r\n    selector: 'app-books-edit',\r\n    templateUrl: './books-edit.component.html',\r\n    styleUrls: ['./books-edit.component.css']\r\n})\r\nexport class BooksEditComponent implements OnInit {\r\n\r\n    private routerLink: string = '../list';\r\n\r\n    private bookID: number;\r\n\r\n    private isEdit: boolean = false;\r\n\r\n    public formGroup: FormGroup;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private booksService: BooksService,\r\n        private formBuilder: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.bookID = parseInt(this.route.snapshot.params['id']);\r\n\r\n        if (this.bookID) {\r\n            this.routerLink = '../../list';\r\n\r\n            this.booksService.getBook(this.bookID).subscribe(res => {\r\n                this.initForm(res);\r\n                this.isEdit = true;\r\n            });\r\n        }\r\n        else {\r\n            this.initForm(<Book>{});\r\n        }\r\n    }\r\n\r\n    save() {\r\n        Object.keys(this.formGroup.controls).forEach(control => {\r\n            this.formGroup.get(control).markAsTouched();\r\n        });\r\n\r\n        if (this.formGroup.valid) {\r\n            let book = this.formGroup.value as Book;\r\n            book.bookGenre = BookGenre.Romance;\r\n\r\n            if (this.isEdit) {\r\n                book.id = this.bookID;\r\n\r\n                this.booksService.modifyBook(book).subscribe(res => {\r\n                    this.router.navigate(['/books']);\r\n                });\r\n            } else {\r\n\r\n                this.booksService.saveBook(book).subscribe(res => {\r\n                    this.router.navigate(['/books']);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    initForm(book : Book) {\r\n        this.formGroup = this.formBuilder.group({\r\n            title: [book.title, Validators.required],\r\n            yearOfRelease: [book.yearOfRelease, Validators.required],\r\n            publisher: [book.publisher, Validators.required],\r\n            author: [book.author, [Validators.required]],\r\n            bookGenre: [book.bookGenre, [Validators.required]],\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default \"\\r\\ntable {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9va3MvYm9va3MtbGlzdC9ib29rcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksZUFBZTtJQUNmLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2Jvb2tzL2Jvb2tzLWxpc3QvYm9va3MtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbnRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Book } from '../books.models';\r\nimport { BooksService } from '../books.service';\r\n\r\n@Component({\r\n    selector: 'app-books-list',\r\n    templateUrl: './books-list.component.html',\r\n    styleUrls: ['./books-list.component.css']\r\n})\r\nexport class BooksListComponent implements OnInit {\r\n\r\n    public displayedColumns: string[] = ['title', 'yearOfRelease', 'publisher', 'author', 'bookGenre', 'numberOfReviews', 'action'];\r\n    public books: Book[];\r\n\r\n\r\n    constructor(private booksService: BooksService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadBooks();\r\n    }\r\n\r\n    async loadBooks() {\r\n        this.booksService.listBooks().subscribe(res => {\r\n            this.books = res;\r\n        });\r\n    }\r\n\r\n    deleteBook(book: Book) {\r\n        this.booksService.deleteBook(book.id).subscribe(x => {\r\n            this.loadBooks();\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { BooksComponent } from './books.component';\r\nimport { BooksEditComponent } from './books-edit/books-edit.component';\r\nimport { BooksListComponent } from './books-list/books-list.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: BooksComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n            { path: 'list', component: BooksListComponent },\r\n            { path: 'edit/:id', component: BooksEditComponent },\r\n            { path: 'edit', component: BooksEditComponent },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class BooksRoutingModule {\r\n    static routedComponents = [BooksComponent, BooksListComponent, BooksEditComponent];\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2tzL2Jvb2tzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\nexport class BooksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export interface Book {\r\n\r\n    id: number;\r\n    title: string;\r\n    yearOfRelease: number;\r\n    author: string;\r\n    bookGenre: BookGenre;\r\n    publisher: any;\r\n    }\r\n\r\n\r\nexport enum BookGenre {\r\n    Romance,\r\n    Fantasy,\r\n    Science,\r\n    Mistery,\r\n    Action\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\n\r\nimport { BooksRoutingModule } from './books-routing.module';\r\n\r\nimport { BooksService } from './books.service';\r\n\r\n@NgModule({\r\n    declarations: [BooksRoutingModule.routedComponents],\r\n    imports: [\r\n        CommonModule,\r\n        BooksRoutingModule,\r\n        AngularMaterialModule,\r\n        CoreModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [BooksService],\r\n})\r\nexport class BooksModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Book } from './books.models';\r\nimport { ApplicationService } from '../core/services/application.service';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class BooksService {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private applicationService: ApplicationService) { }\r\n\r\n    getBook(id: number) {\r\n        return this.http.get<Book>(`${this.applicationService.baseUrl}api/Books/${id}`);\r\n    }\r\n\r\n    listBooks() {\r\n        return this.http.get<Book[]>(`${this.applicationService.baseUrl}api/Books`);\r\n    }\r\n\r\n    saveBook(book: Book) {\r\n        return this.http.post(`${this.applicationService.baseUrl}api/Books`, book);\r\n\r\n    }\r\n\r\n    modifyBook(book: Book) {\r\n        return this.http.put(`${this.applicationService.baseUrl}api/Books/${book.id}`, book);\r\n    }\r\n\r\n    deleteBook(id: number) {\r\n        return this.http.delete<any>(`${this.applicationService.baseUrl}api/Books/${id}`);\r\n    }\r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}